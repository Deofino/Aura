@function rem($size) {
  @if unit($size) == "" {
    $rem: ($size) / 16;
    @return $rem + rem;
  } @else {
    @return ($size / 16px) + rem;
  }
}
/**
  @param {$place} - justify-content (center,end,start ...)
  @param {$diretion} - row ou column
*/
@mixin flex($place, $diretion: row) {
  display: flex;
  flex-direction: $diretion;
  align-items: center;
  @if $place == center {
    justify-content: center;
  } @else if $place == end {
    justify-content: center;
  } @else if $place == start {
    justify-content: start;
  } @else {
    justify-content: $place;
  }
}

@mixin breakpoint($point) {
  @if $point == small {
    @media (max-width: 37.5em) {
      // 600px
      @content;
    }
  } @else if $point == medium {
    @media (max-width: 56.25em) {
      // 900px
      @content;
    }
  } @else if $point == large {
    @media (max-width: 75em) {
      // 1200px
      @content;
    }
  } @else {
    @media (max-width: ($point / 16) + "em") {
      @content;
    }
  }
}

/**
  @param {$color} - Background color, aceita gradiente tbm
  @param {$border:true} - Vai ter borda
  @param {$fontColor} - Cor da fonte
*/
@mixin bg-generate($color, $fontColor: $black, $border: true) {
  color: $fontColor;
  background: $color;
  @if $border==true {
    border: 1px solid darken($color, 5%);
  }
}

/**
  @param {$Y} - Centraliza eixo Y (VERTICAL)
  @param {$X} - Centraliza eixo X (HORIZONTAL)
*/
@mixin centralizeAbsolute($Y: false, $X: false) {
  @if $Y != false {
    top: 50%;
  }
  @if $X != false {
    left: 50%;
  }
  transform: translate(-50%, -50%);
}

@mixin darkMode {
  @media (prefers-color-scheme: dark) {
    // Dark mode
    @content;
  }
}
